<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Admin - Client Management</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f4f4f4; color: #333; }
        .container { background-color: #fff; padding: 20px; border-radius: 8px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
        h1, h2, h3 { color: #333; }
        table { width: 100%; border-collapse: collapse; margin-bottom: 20px; }
        th, td { padding: 10px; border: 1px solid #ddd; text-align: left; word-break: break-word; }
        th { background-color: #f0f0f0; }
        .actions a, .actions button { margin-right: 5px; text-decoration: none; color: #007bff; border: none; background: none; cursor: pointer; padding: 5px; font-size: 0.9em; }
        .actions button.delete, .actions button.reject { color: #dc3545; }
        .actions button.approve { color: #28a745; }
        .form-group { margin-bottom: 15px; }
        .form-group label { display: block; margin-bottom: 5px; }
        .form-group input[type="text"], .form-group select { width: calc(100% - 22px); padding: 10px; border: 1px solid #ccc; border-radius: 4px; }
        .btn { padding: 10px 15px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; text-decoration: none; display: inline-block; }
        .btn-danger { background-color: #dc3545; }
        .btn-secondary { background-color: #6c757d; }
        .alert { padding: 10px; margin-bottom: 15px; border-radius: 4px; }
        .alert-success { background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb; }
        .alert-error { background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; }
        .nav-links { margin-bottom: 20px; }
        .nav-links a { margin-right: 15px; text-decoration: none; color: #007bff; font-weight: bold; }
        .mono { font-family: monospace; background-color: #e9ecef; padding: 2px 4px; border-radius: 3px; }
        .small-text { font-size: 0.85em; color: #555; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Client Application Management</h1>
        <div class="nav-links">
            <a href="/admin">Manage Secrets</a>
            <a href="/admin/clients">Manage Clients</a>
            <a href="/admin/logout" style="float: right;">Logout</a>
        </div>

        <% if (message && message.text) { %>
            <div class="alert <%= message.type === 'success' ? 'alert-success' : 'alert-error' %>">
                <%= message.text %>
            </div>
        <% } %>

        <% if (!managingClientSecrets) { %>
        <div style="margin-bottom: 20px; padding: 10px; border: 1px solid #eee; background-color: #f9f9f9;">
            <h3>WebSocket Settings (Debug)</h3>
            <label for="autoApproveWsToggle">
                <input type="checkbox" id="autoApproveWsToggle">
                Automatically Approve New WebSocket Registrations
            </label>
            <span id="autoApproveStatus" style="margin-left: 10px; font-style: italic;"></span>
        </div>
        <% } %>

        <% if (managingClientSecrets) { %>
            <h2>Manage Secrets for Client: <span class="mono"><%= managingClientSecrets.client.name %> (<%= managingClientSecrets.client.id %>)</span></h2>
            <form action="/admin/clients/<%= managingClientSecrets.client.id %>/secrets/update" method="POST">
                <div class="form-group">
                    <label>Available Secrets (select to associate):</label>
                    <% if (managingClientSecrets.allSecrets.length > 0) { %>
                        <% managingClientSecrets.allSecrets.forEach(secretKey => { %>
                            <div>
                                <input type="checkbox"
                                       id="secret_<%= secretKey %>"
                                       name="associatedSecretKeys"
                                       value="<%= secretKey %>"
                                       <%= managingClientSecrets.client.associatedSecretKeys.includes(secretKey) ? 'checked' : '' %>>
                                <label for="secret_<%= secretKey %>"><%= secretKey %></label>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <p>No secrets available to associate. Add secrets in the 'Manage Secrets' section first.</p>
                    <% } %>
                </div>
                <button type="submit" class="btn">Update Associated Secrets</button>
                <a href="/admin/clients" class="btn btn-secondary">Back to Client List</a>
            </form>
        <% } else { %>
            <h2>Pending Client Registrations</h2>
            <% if (pendingClients && pendingClients.length > 0) { %>
                <table>
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Client ID / Temp ID</th>
                            <th>Requested Secrets</th>
                            <th>Date Registered</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% pendingClients.forEach(client => { %>
                            <tr>
                                <td><%= client.name %></td>
                                <td class="mono"><%= client.id %></td>
                                <td><%= client.requestedSecretKeys && client.requestedSecretKeys.length > 0 ? client.requestedSecretKeys.join(', ') : 'None' %></td>
                                <td><%= new Date(client.dateCreated).toLocaleString() %></td>
                                <td class="actions">
                                    <form action="/admin/clients/approve/<%= client.id %>" method="POST" style="display:inline;">
                                        <button type="submit" class="approve">Approve</button>
                                    </form>
                                    <form action="/admin/clients/reject/<%= client.id %>" method="POST" style="display:inline;">
                                        <button type="submit" class="reject">Reject</button>
                                    </form>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            <% } else { %>
                <p>No pending client registrations.</p>
            <% } %>

            <h2>Approved Clients</h2>
            <% if (approvedClients && approvedClients.length > 0) { %>
                <table>
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Client ID</th>
                            <th>Associated Secrets</th>
                            <th>Date Approved/Updated</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% approvedClients.forEach(client => { %>
                            <tr>
                                <td><%= client.name %></td>
                                <td class="mono"><%= client.id %></td>
                                <td><%= client.associatedSecretKeys.join(', ') || 'None' %></td>
                                <td><%= new Date(client.dateUpdated).toLocaleString() %></td>
                                <td class="actions">
                                    <a href="/admin/clients/<%= client.id %>/secrets">Manage Secrets</a>
                                    <form action="/admin/clients/revoke/<%= client.id %>" method="POST" style="display:inline;">
                                        <button type="submit" class="delete">Revoke</button>
                                    </form>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            <% } else { %>
                <p>No approved clients.</p>
            <% } %>
        <% } %>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const autoApproveToggle = document.getElementById('autoApproveWsToggle');
            const autoApproveStatusSpan = document.getElementById('autoApproveStatus');

            if (autoApproveToggle) { // Only run if the toggle is on the page (i.e., not on secret management view)
                // Fetch initial status
                fetch('/admin/settings/auto-approve-ws-status')
                    .then(response => response.json())
                    .then(data => {
                        autoApproveToggle.checked = data.autoApproveEnabled;
                        autoApproveStatusSpan.textContent = data.autoApproveEnabled ? 'Enabled' : 'Disabled';
                    })
                    .catch(error => {
                        console.error('Error fetching auto-approve status:', error);
                        autoApproveStatusSpan.textContent = 'Error loading status.';
                    });

                // Add event listener for changes
                autoApproveToggle.addEventListener('change', () => {
                    autoApproveStatusSpan.textContent = 'Updating...';
                    fetch('/admin/settings/toggle-auto-approve-ws', {
                        method: 'POST',
                        // body: JSON.stringify({}), // No body needed for a simple toggle
                        headers: {
                            'Content-Type': 'application/json' // Though no body, header might be expected by some frameworks
                        }
                    })
                    .then(response => response.json())
                    .then(data => {
                        autoApproveToggle.checked = data.autoApproveEnabled;
                        autoApproveStatusSpan.textContent = data.autoApproveEnabled ? 'Enabled' : 'Disabled';
                        // Optionally, display data.message as an alert or temporary message
                        console.log(data.message);
                    })
                    .catch(error => {
                        console.error('Error toggling auto-approve:', error);
                        autoApproveStatusSpan.textContent = 'Error updating status.';
                        // Revert checkbox on error? Or fetch status again? For now, just log.
                    });
                });
            }
        });
    </script>
</body>
</html>
